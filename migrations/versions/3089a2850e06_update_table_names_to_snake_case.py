"""Update table names to snake_case

Revision ID: 3089a2850e06
Revises: 6fe9d947a029
Create Date: 2025-03-13 22:10:37.636056

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '3089a2850e06'
down_revision = '6fe9d947a029'
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('skin_cancer_data',
    sa.Column('cancer_group', sa.String(length=100), nullable=False),
    sa.Column('year', sa.Integer(), nullable=False),
    sa.Column('sex', sa.String(length=10), nullable=False),
    sa.Column('age_group', sa.String(length=20), nullable=False),
    sa.Column('count', sa.Integer(), nullable=False),
    sa.Column('age_specific_rate', sa.Float(), nullable=False),
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_skin_cancer_data_age_group'), 'skin_cancer_data', ['age_group'], unique=False)
    op.create_index(op.f('ix_skin_cancer_data_cancer_group'), 'skin_cancer_data', ['cancer_group'], unique=False)
    op.create_index(op.f('ix_skin_cancer_data_sex'), 'skin_cancer_data', ['sex'], unique=False)
    op.create_index(op.f('ix_skin_cancer_data_year'), 'skin_cancer_data', ['year'], unique=False)
    op.create_table('temperature_records',
    sa.Column('temperature', sa.Float(), nullable=False),
    sa.Column('feels_like', sa.Float(), nullable=True),
    sa.Column('humidity', sa.Float(), nullable=True),
    sa.Column('pressure', sa.Float(), nullable=True),
    sa.Column('wind_speed', sa.Float(), nullable=True),
    sa.Column('location_id', sa.String(length=36), nullable=False),
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['location_id'], ['locations.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('uv_records',
    sa.Column('uv_index', sa.Float(), nullable=False),
    sa.Column('clouds', sa.Integer(), nullable=True),
    sa.Column('visibility', sa.Integer(), nullable=True),
    sa.Column('location_id', sa.String(length=36), nullable=False),
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['location_id'], ['locations.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.drop_table('temperaturerecords')
    op.drop_index('ix_skincancerdatas_age_group', table_name='skincancerdatas')
    op.drop_index('ix_skincancerdatas_cancer_group', table_name='skincancerdatas')
    op.drop_index('ix_skincancerdatas_sex', table_name='skincancerdatas')
    op.drop_index('ix_skincancerdatas_year', table_name='skincancerdatas')
    op.drop_table('skincancerdatas')
    op.drop_table('uvrecords')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('uvrecords',
    sa.Column('uv_index', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=False),
    sa.Column('clouds', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('visibility', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('location_id', sa.VARCHAR(length=36), autoincrement=False, nullable=False),
    sa.Column('id', sa.VARCHAR(length=36), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['location_id'], ['locations.id'], name='uvrecords_location_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='uvrecords_pkey')
    )
    op.create_table('skincancerdatas',
    sa.Column('cancer_group', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('year', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('sex', sa.VARCHAR(length=10), autoincrement=False, nullable=False),
    sa.Column('age_group', sa.VARCHAR(length=20), autoincrement=False, nullable=False),
    sa.Column('count', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('age_specific_rate', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=False),
    sa.Column('id', sa.VARCHAR(length=36), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='skincancerdatas_pkey')
    )
    op.create_index('ix_skincancerdatas_year', 'skincancerdatas', ['year'], unique=False)
    op.create_index('ix_skincancerdatas_sex', 'skincancerdatas', ['sex'], unique=False)
    op.create_index('ix_skincancerdatas_cancer_group', 'skincancerdatas', ['cancer_group'], unique=False)
    op.create_index('ix_skincancerdatas_age_group', 'skincancerdatas', ['age_group'], unique=False)
    op.create_table('temperaturerecords',
    sa.Column('temperature', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=False),
    sa.Column('feels_like', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('humidity', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('pressure', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('wind_speed', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('location_id', sa.VARCHAR(length=36), autoincrement=False, nullable=False),
    sa.Column('id', sa.VARCHAR(length=36), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['location_id'], ['locations.id'], name='temperaturerecords_location_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='temperaturerecords_pkey')
    )
    op.drop_table('uv_records')
    op.drop_table('temperature_records')
    op.drop_index(op.f('ix_skin_cancer_data_year'), table_name='skin_cancer_data')
    op.drop_index(op.f('ix_skin_cancer_data_sex'), table_name='skin_cancer_data')
    op.drop_index(op.f('ix_skin_cancer_data_cancer_group'), table_name='skin_cancer_data')
    op.drop_index(op.f('ix_skin_cancer_data_age_group'), table_name='skin_cancer_data')
    op.drop_table('skin_cancer_data')
    # ### end Alembic commands ###